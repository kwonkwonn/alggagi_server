// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/Match.proto
// Protobuf C++ Version: 6.32.0

#ifndef proto_2fMatch_2eproto_2epb_2eh
#define proto_2fMatch_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fMatch_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fMatch_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proto_2fMatch_2eproto;
}  // extern "C"
class NewMatchInfo;
struct NewMatchInfoDefaultTypeInternal;
extern NewMatchInfoDefaultTypeInternal _NewMatchInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NewMatchInfo_class_data_;
class NewMatchRequest;
struct NewMatchRequestDefaultTypeInternal;
extern NewMatchRequestDefaultTypeInternal _NewMatchRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NewMatchRequest_class_data_;
class NewMatchResponse;
struct NewMatchResponseDefaultTypeInternal;
extern NewMatchResponseDefaultTypeInternal _NewMatchResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NewMatchResponse_class_data_;
class Wrapper;
struct WrapperDefaultTypeInternal;
extern WrapperDefaultTypeInternal _Wrapper_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Wrapper_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class NewMatchResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:NewMatchResponse) */ {
 public:
  inline NewMatchResponse() : NewMatchResponse(nullptr) {}
  ~NewMatchResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NewMatchResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NewMatchResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewMatchResponse(::google::protobuf::internal::ConstantInitialized);

  inline NewMatchResponse(const NewMatchResponse& from) : NewMatchResponse(nullptr, from) {}
  inline NewMatchResponse(NewMatchResponse&& from) noexcept
      : NewMatchResponse(nullptr, ::std::move(from)) {}
  inline NewMatchResponse& operator=(const NewMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewMatchResponse& operator=(NewMatchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewMatchResponse& default_instance() {
    return *reinterpret_cast<const NewMatchResponse*>(
        &_NewMatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NewMatchResponse& a, NewMatchResponse& b) { a.Swap(&b); }
  inline void Swap(NewMatchResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewMatchResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewMatchResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NewMatchResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewMatchResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewMatchResponse& from) { NewMatchResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NewMatchResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "NewMatchResponse"; }

 protected:
  explicit NewMatchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NewMatchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NewMatchResponse& from);
  NewMatchResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NewMatchResponse&& from) noexcept
      : NewMatchResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameCodeFieldNumber = 1,
  };
  // int32 gameCode = 1;
  void clear_gamecode() ;
  ::int32_t gamecode() const;
  void set_gamecode(::int32_t value);

  private:
  ::int32_t _internal_gamecode() const;
  void _internal_set_gamecode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:NewMatchResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NewMatchResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t gamecode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMatch_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NewMatchResponse_class_data_;
// -------------------------------------------------------------------

class NewMatchRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:NewMatchRequest) */ {
 public:
  inline NewMatchRequest() : NewMatchRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NewMatchRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NewMatchRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewMatchRequest(::google::protobuf::internal::ConstantInitialized);

  inline NewMatchRequest(const NewMatchRequest& from) : NewMatchRequest(nullptr, from) {}
  inline NewMatchRequest(NewMatchRequest&& from) noexcept
      : NewMatchRequest(nullptr, ::std::move(from)) {}
  inline NewMatchRequest& operator=(const NewMatchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewMatchRequest& operator=(NewMatchRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewMatchRequest& default_instance() {
    return *reinterpret_cast<const NewMatchRequest*>(
        &_NewMatchRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NewMatchRequest& a, NewMatchRequest& b) { a.Swap(&b); }
  inline void Swap(NewMatchRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewMatchRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewMatchRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<NewMatchRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NewMatchRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NewMatchRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "NewMatchRequest"; }

 protected:
  explicit NewMatchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NewMatchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NewMatchRequest& from);
  NewMatchRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NewMatchRequest&& from) noexcept
      : NewMatchRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:NewMatchRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_proto_2fMatch_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NewMatchRequest_class_data_;
// -------------------------------------------------------------------

class NewMatchInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:NewMatchInfo) */ {
 public:
  inline NewMatchInfo() : NewMatchInfo(nullptr) {}
  ~NewMatchInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NewMatchInfo* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NewMatchInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewMatchInfo(::google::protobuf::internal::ConstantInitialized);

  inline NewMatchInfo(const NewMatchInfo& from) : NewMatchInfo(nullptr, from) {}
  inline NewMatchInfo(NewMatchInfo&& from) noexcept
      : NewMatchInfo(nullptr, ::std::move(from)) {}
  inline NewMatchInfo& operator=(const NewMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewMatchInfo& operator=(NewMatchInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewMatchInfo& default_instance() {
    return *reinterpret_cast<const NewMatchInfo*>(
        &_NewMatchInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NewMatchInfo& a, NewMatchInfo& b) { a.Swap(&b); }
  inline void Swap(NewMatchInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewMatchInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewMatchInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NewMatchInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewMatchInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewMatchInfo& from) { NewMatchInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NewMatchInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "NewMatchInfo"; }

 protected:
  explicit NewMatchInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NewMatchInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NewMatchInfo& from);
  NewMatchInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NewMatchInfo&& from) noexcept
      : NewMatchInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameCodeFieldNumber = 1,
  };
  // int32 gameCode = 1;
  void clear_gamecode() ;
  ::int32_t gamecode() const;
  void set_gamecode(::int32_t value);

  private:
  ::int32_t _internal_gamecode() const;
  void _internal_set_gamecode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:NewMatchInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NewMatchInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t gamecode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMatch_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NewMatchInfo_class_data_;
// -------------------------------------------------------------------

class Wrapper final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Wrapper) */ {
 public:
  inline Wrapper() : Wrapper(nullptr) {}
  ~Wrapper() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Wrapper* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Wrapper));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Wrapper(::google::protobuf::internal::ConstantInitialized);

  inline Wrapper(const Wrapper& from) : Wrapper(nullptr, from) {}
  inline Wrapper(Wrapper&& from) noexcept
      : Wrapper(nullptr, ::std::move(from)) {}
  inline Wrapper& operator=(const Wrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline Wrapper& operator=(Wrapper&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Wrapper& default_instance() {
    return *reinterpret_cast<const Wrapper*>(
        &_Wrapper_default_instance_);
  }
  enum PayloadCase {
    kMatReq = 1,
    kMatIn = 2,
    kMatRes = 3,
    PAYLOAD_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Wrapper& a, Wrapper& b) { a.Swap(&b); }
  inline void Swap(Wrapper* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Wrapper* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Wrapper* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Wrapper>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Wrapper& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Wrapper& from) { Wrapper::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Wrapper* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Wrapper"; }

 protected:
  explicit Wrapper(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Wrapper(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Wrapper& from);
  Wrapper(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Wrapper&& from) noexcept
      : Wrapper(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMatReqFieldNumber = 1,
    kMatInFieldNumber = 2,
    kMatResFieldNumber = 3,
  };
  // .NewMatchRequest matReq = 1;
  bool has_matreq() const;
  private:
  bool _internal_has_matreq() const;

  public:
  void clear_matreq() ;
  const ::NewMatchRequest& matreq() const;
  [[nodiscard]] ::NewMatchRequest* PROTOBUF_NULLABLE release_matreq();
  ::NewMatchRequest* PROTOBUF_NONNULL mutable_matreq();
  void set_allocated_matreq(::NewMatchRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_matreq(::NewMatchRequest* PROTOBUF_NULLABLE value);
  ::NewMatchRequest* PROTOBUF_NULLABLE unsafe_arena_release_matreq();

  private:
  const ::NewMatchRequest& _internal_matreq() const;
  ::NewMatchRequest* PROTOBUF_NONNULL _internal_mutable_matreq();

  public:
  // .NewMatchInfo matIn = 2;
  bool has_matin() const;
  private:
  bool _internal_has_matin() const;

  public:
  void clear_matin() ;
  const ::NewMatchInfo& matin() const;
  [[nodiscard]] ::NewMatchInfo* PROTOBUF_NULLABLE release_matin();
  ::NewMatchInfo* PROTOBUF_NONNULL mutable_matin();
  void set_allocated_matin(::NewMatchInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_matin(::NewMatchInfo* PROTOBUF_NULLABLE value);
  ::NewMatchInfo* PROTOBUF_NULLABLE unsafe_arena_release_matin();

  private:
  const ::NewMatchInfo& _internal_matin() const;
  ::NewMatchInfo* PROTOBUF_NONNULL _internal_mutable_matin();

  public:
  // .NewMatchResponse matRes = 3;
  bool has_matres() const;
  private:
  bool _internal_has_matres() const;

  public:
  void clear_matres() ;
  const ::NewMatchResponse& matres() const;
  [[nodiscard]] ::NewMatchResponse* PROTOBUF_NULLABLE release_matres();
  ::NewMatchResponse* PROTOBUF_NONNULL mutable_matres();
  void set_allocated_matres(::NewMatchResponse* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_matres(::NewMatchResponse* PROTOBUF_NULLABLE value);
  ::NewMatchResponse* PROTOBUF_NULLABLE unsafe_arena_release_matres();

  private:
  const ::NewMatchResponse& _internal_matres() const;
  ::NewMatchResponse* PROTOBUF_NONNULL _internal_mutable_matres();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:Wrapper)
 private:
  class _Internal;
  void set_has_matreq();
  void set_has_matin();
  void set_has_matres();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Wrapper& from_msg);
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE matreq_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE matin_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE matres_;
    } payload_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMatch_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Wrapper_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Wrapper

// .NewMatchRequest matReq = 1;
inline bool Wrapper::has_matreq() const {
  return payload_case() == kMatReq;
}
inline bool Wrapper::_internal_has_matreq() const {
  return payload_case() == kMatReq;
}
inline void Wrapper::set_has_matreq() {
  _impl_._oneof_case_[0] = kMatReq;
}
inline void Wrapper::clear_matreq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMatReq) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.matreq_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.matreq_);
    }
    clear_has_payload();
  }
}
inline ::NewMatchRequest* PROTOBUF_NULLABLE Wrapper::release_matreq() {
  // @@protoc_insertion_point(field_release:Wrapper.matReq)
  if (payload_case() == kMatReq) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::NewMatchRequest*>(_impl_.payload_.matreq_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.matreq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::NewMatchRequest& Wrapper::_internal_matreq() const {
  return payload_case() == kMatReq ? *reinterpret_cast<::NewMatchRequest*>(_impl_.payload_.matreq_) : reinterpret_cast<::NewMatchRequest&>(::_NewMatchRequest_default_instance_);
}
inline const ::NewMatchRequest& Wrapper::matreq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Wrapper.matReq)
  return _internal_matreq();
}
inline ::NewMatchRequest* PROTOBUF_NULLABLE Wrapper::unsafe_arena_release_matreq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Wrapper.matReq)
  if (payload_case() == kMatReq) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::NewMatchRequest*>(_impl_.payload_.matreq_);
    _impl_.payload_.matreq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Wrapper::unsafe_arena_set_allocated_matreq(
    ::NewMatchRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_matreq();
    _impl_.payload_.matreq_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Wrapper.matReq)
}
inline ::NewMatchRequest* PROTOBUF_NONNULL Wrapper::_internal_mutable_matreq() {
  if (payload_case() != kMatReq) {
    clear_payload();
    set_has_matreq();
    _impl_.payload_.matreq_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::NewMatchRequest>(GetArena()));
  }
  return reinterpret_cast<::NewMatchRequest*>(_impl_.payload_.matreq_);
}
inline ::NewMatchRequest* PROTOBUF_NONNULL Wrapper::mutable_matreq()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::NewMatchRequest* _msg = _internal_mutable_matreq();
  // @@protoc_insertion_point(field_mutable:Wrapper.matReq)
  return _msg;
}

// .NewMatchInfo matIn = 2;
inline bool Wrapper::has_matin() const {
  return payload_case() == kMatIn;
}
inline bool Wrapper::_internal_has_matin() const {
  return payload_case() == kMatIn;
}
inline void Wrapper::set_has_matin() {
  _impl_._oneof_case_[0] = kMatIn;
}
inline void Wrapper::clear_matin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMatIn) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.matin_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.matin_);
    }
    clear_has_payload();
  }
}
inline ::NewMatchInfo* PROTOBUF_NULLABLE Wrapper::release_matin() {
  // @@protoc_insertion_point(field_release:Wrapper.matIn)
  if (payload_case() == kMatIn) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::NewMatchInfo*>(_impl_.payload_.matin_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.matin_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::NewMatchInfo& Wrapper::_internal_matin() const {
  return payload_case() == kMatIn ? *reinterpret_cast<::NewMatchInfo*>(_impl_.payload_.matin_) : reinterpret_cast<::NewMatchInfo&>(::_NewMatchInfo_default_instance_);
}
inline const ::NewMatchInfo& Wrapper::matin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Wrapper.matIn)
  return _internal_matin();
}
inline ::NewMatchInfo* PROTOBUF_NULLABLE Wrapper::unsafe_arena_release_matin() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Wrapper.matIn)
  if (payload_case() == kMatIn) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::NewMatchInfo*>(_impl_.payload_.matin_);
    _impl_.payload_.matin_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Wrapper::unsafe_arena_set_allocated_matin(
    ::NewMatchInfo* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_matin();
    _impl_.payload_.matin_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Wrapper.matIn)
}
inline ::NewMatchInfo* PROTOBUF_NONNULL Wrapper::_internal_mutable_matin() {
  if (payload_case() != kMatIn) {
    clear_payload();
    set_has_matin();
    _impl_.payload_.matin_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::NewMatchInfo>(GetArena()));
  }
  return reinterpret_cast<::NewMatchInfo*>(_impl_.payload_.matin_);
}
inline ::NewMatchInfo* PROTOBUF_NONNULL Wrapper::mutable_matin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::NewMatchInfo* _msg = _internal_mutable_matin();
  // @@protoc_insertion_point(field_mutable:Wrapper.matIn)
  return _msg;
}

// .NewMatchResponse matRes = 3;
inline bool Wrapper::has_matres() const {
  return payload_case() == kMatRes;
}
inline bool Wrapper::_internal_has_matres() const {
  return payload_case() == kMatRes;
}
inline void Wrapper::set_has_matres() {
  _impl_._oneof_case_[0] = kMatRes;
}
inline void Wrapper::clear_matres() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMatRes) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.matres_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.matres_);
    }
    clear_has_payload();
  }
}
inline ::NewMatchResponse* PROTOBUF_NULLABLE Wrapper::release_matres() {
  // @@protoc_insertion_point(field_release:Wrapper.matRes)
  if (payload_case() == kMatRes) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::NewMatchResponse*>(_impl_.payload_.matres_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.matres_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::NewMatchResponse& Wrapper::_internal_matres() const {
  return payload_case() == kMatRes ? *reinterpret_cast<::NewMatchResponse*>(_impl_.payload_.matres_) : reinterpret_cast<::NewMatchResponse&>(::_NewMatchResponse_default_instance_);
}
inline const ::NewMatchResponse& Wrapper::matres() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Wrapper.matRes)
  return _internal_matres();
}
inline ::NewMatchResponse* PROTOBUF_NULLABLE Wrapper::unsafe_arena_release_matres() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Wrapper.matRes)
  if (payload_case() == kMatRes) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::NewMatchResponse*>(_impl_.payload_.matres_);
    _impl_.payload_.matres_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Wrapper::unsafe_arena_set_allocated_matres(
    ::NewMatchResponse* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_matres();
    _impl_.payload_.matres_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Wrapper.matRes)
}
inline ::NewMatchResponse* PROTOBUF_NONNULL Wrapper::_internal_mutable_matres() {
  if (payload_case() != kMatRes) {
    clear_payload();
    set_has_matres();
    _impl_.payload_.matres_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::NewMatchResponse>(GetArena()));
  }
  return reinterpret_cast<::NewMatchResponse*>(_impl_.payload_.matres_);
}
inline ::NewMatchResponse* PROTOBUF_NONNULL Wrapper::mutable_matres()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::NewMatchResponse* _msg = _internal_mutable_matres();
  // @@protoc_insertion_point(field_mutable:Wrapper.matRes)
  return _msg;
}

inline bool Wrapper::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void Wrapper::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline Wrapper::PayloadCase Wrapper::payload_case() const {
  return Wrapper::PayloadCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// NewMatchRequest

// -------------------------------------------------------------------

// NewMatchInfo

// int32 gameCode = 1;
inline void NewMatchInfo::clear_gamecode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamecode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int32_t NewMatchInfo::gamecode() const {
  // @@protoc_insertion_point(field_get:NewMatchInfo.gameCode)
  return _internal_gamecode();
}
inline void NewMatchInfo::set_gamecode(::int32_t value) {
  _internal_set_gamecode(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:NewMatchInfo.gameCode)
}
inline ::int32_t NewMatchInfo::_internal_gamecode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gamecode_;
}
inline void NewMatchInfo::_internal_set_gamecode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamecode_ = value;
}

// -------------------------------------------------------------------

// NewMatchResponse

// int32 gameCode = 1;
inline void NewMatchResponse::clear_gamecode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamecode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int32_t NewMatchResponse::gamecode() const {
  // @@protoc_insertion_point(field_get:NewMatchResponse.gameCode)
  return _internal_gamecode();
}
inline void NewMatchResponse::set_gamecode(::int32_t value) {
  _internal_set_gamecode(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:NewMatchResponse.gameCode)
}
inline ::int32_t NewMatchResponse::_internal_gamecode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gamecode_;
}
inline void NewMatchResponse::_internal_set_gamecode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamecode_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fMatch_2eproto_2epb_2eh
